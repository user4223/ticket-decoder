name: ubuntu24-gcc13

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '23 3 2,12,22 * *'

env:
  GCC_VERSION: 13

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-24.04, ubuntu-24.04-arm]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install compiler and stdlib
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y gcc-$GCC_VERSION g++-$GCC_VERSION cpp-$GCC_VERSION libstdc++-$GCC_VERSION-dev libgtk2.0-dev python3-dev

          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$GCC_VERSION 800
          sudo update-alternatives --install /usr/bin/cc  cc  /usr/bin/gcc-$GCC_VERSION 800

          etc/install-ubuntu-dependencies.sh

          #
          # numpy is required to get boost.python compiled via conan recipe
          #
          python3 -m venv .venv && . .venv/bin/activate && pip install "conan<2.0" "numpy"

      - name: Setup conan
        run: . .venv/bin/activate && etc/conan-config.sh gcc $GCC_VERSION

      - name: Cache/Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.conan/data
          key: ${{ runner.arch }}-${{ github.workflow }}-conanfile-${{ hashFiles('conanfile.py') }}

      - name: Install dependencies
        run: . .venv/bin/activate && etc/conan-install.sh Release

      - name: Build
        run: |
          etc/cmake-config.sh Release
          etc/cmake-build.sh Release -- -j

      - name: Unit-Test C++
        run: |
          etc/install-uic-keys.sh
          build/Release/bin/ticket-decoder-test

      - name: Unit-Test Python3
        run: etc/python-test.sh

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ticket-decoder-${{ runner.arch }}-${{ github.workflow }}
          path: |
            build/Release/etc/*
            build/Release/lib/*
            build/Release/bin/*
